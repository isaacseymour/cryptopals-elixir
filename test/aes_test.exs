defmodule AESTest do
  use ExUnit.Case, async: true
  import AES

  test "adding" do
    assert add(0x57, 0x83) == 0xd4
  end

  test "xtime" do
    assert xtime(0x57) == 0xae
    assert xtime(0xae) == 0x47
    assert xtime(0x47) == 0x8e
    assert xtime(0x8e) == 0x07
  end

  test "multiplying" do
    assert mul(0x57, 0x83) == 0xc1
    assert mul(0x57, 0x04) == 0x47
    assert mul(0x57, 0x08) == 0x8e
    assert mul(0x57, 0x10) == 0x07
    assert mul(0x57, 0x13) == 0xfe
  end

  test "sub_bytes" do
    assert sub_bytes([0x53]) == [0xed]
  end

  test "shift_rows" do
    input = [
      0x01, 0x05, 0x09, 0x0d,
      0x02, 0x06, 0x0a, 0x0e,
      0x03, 0x07, 0x0b, 0x0f,
      0x04, 0x08, 0x0c, 0x10
    ]
    expected = [
      0x01, 0x06, 0x0b, 0x10,
      0x02, 0x07, 0x0c, 0x0d,
      0x03, 0x08, 0x09, 0x0e,
      0x04, 0x05, 0x0a, 0x0f
    ]

    assert shift_rows(input) == expected
  end

  test "encrypt" do
    input = Helpers.decode_hex("3243f6a8885a308d313198a2e0370734")
    key = Helpers.decode_hex("2b7e151628aed2a6abf7158809cf4f3c")
    expected = [0x39, 0x25, 0x84, 0x1d, 0x02, 0xdc, 0x09, 0xfb, 0xdc, 0x11, 0x85, 0x97, 0x19, 0x6a, 0x0b, 0x32]
    assert encrypt(input, key) == expected
  end
end
